drop table IF EXISTS FILM_GENRE;

drop table IF EXISTS FRIENDS;

drop table IF EXISTS  GENRES;

drop table  IF EXISTS USER_LIKED_FILM;

drop table  IF EXISTS FILMS;

drop table  IF EXISTS MPA;

drop table  IF EXISTS USERS;

CREATE TABLE IF NOT EXISTS USERS
(
    ID       BIGINT  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    NAME     VARCHAR,
    LOGIN    VARCHAR,
    EMAIL    VARCHAR NOT NULL,
    BIRTHDAY DATE    NOT NULL,
    CONSTRAINT user_id PRIMARY KEY (ID)
);
CREATE TABLE IF NOT EXISTS FRIENDS
(
    USER_ID   BIGINT NOT NULL REFERENCES USERS (id) ON DELETE CASCADE,
    FRIEND_ID BIGINT NOT NULL REFERENCES USERS (id) ON DELETE CASCADE,
    CONSTRAINT friends_pk PRIMARY KEY (USER_ID, FRIEND_ID)
);

CREATE TABLE IF NOT EXISTS MPA
(
    ID   INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    NAME VARCHAR,
    CONSTRAINT Mpa_pk PRIMARY KEY (ID)
);
CREATE TABLE IF NOT EXISTS FILMS
(
    ID           BIGINT  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    NAME         VARCHAR,
    DESCRIPTION  VARCHAR,
    DURATION     INT     NOT NULL,
    RELEASE_DATE DATE    NOT NULL,
    MPA_ID       INTEGER NOT NULL REFERENCES MPA(ID),
    CONSTRAINT film_id PRIMARY KEY (ID)
);
CREATE TABLE IF NOT EXISTS GENRES
(
    ID   INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    NAME VARCHAR,
    CONSTRAINT genre_id PRIMARY KEY (ID)
);
CREATE TABLE IF NOT EXISTS FILM_GENRE
(
    FILM_ID  BIGINT REFERENCES FILMS (ID) ON DELETE CASCADE,
    GENRE_ID INTEGER REFERENCES GENRES (ID) ON DELETE CASCADE,
    CONSTRAINT film_genre_pk PRIMARY KEY (FILM_ID, GENRE_ID)
);
CREATE TABLE IF NOT EXISTS USER_LIKED_FILM
(
    USER_ID BIGINT NOT NULL REFERENCES USERS (id) ON DELETE CASCADE,
    FILM_ID BIGINT NOT NULL REFERENCES FILMS (ID) ON DELETE CASCADE,
    CONSTRAINT user_liked_film_pk PRIMARY KEY (USER_ID, FILM_ID)
);